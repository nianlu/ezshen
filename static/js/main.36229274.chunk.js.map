{"version":3,"sources":["app/Nav.js","feature/home/Home.js","api/loginApi.js","feature/login/Login.js","feature/schools/Schools.js","app/Body.js","app/App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","href","style","paddingLeft","onClick","onActive","id","active","Home","placeholder","loginApi","email","password","Axios","get","auth","username","then","console","log","catch","Login","_useState","useState","_useState2","Object","slicedToArray","setEmail","_useState3","_useState4","setPassword","margin","type","onChange","e","target","value","for","Schools","marginTop","Body","home_Home","schools_Schools","login_Login","App","setActive","app_Nav","app_Body","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36229274.chunk.js","sourcesContent":["import React from 'react';\nimport { tsPropertySignature } from '@babel/types';\n\nfunction Nav(props) {\n  return (\n    <nav className=\" teal lighten-3\">\n      <div className=\"nav-wrapper container\">\n        <a href=\"#\" className=\"brand-logo\" style={{paddingLeft: '1rem'}} onClick={() => props.onActive('home')}>易申</a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li className={props.active === 'schools' && 'active'}><a href=\"#\" onClick={() => props.onActive('schools')}>查询</a></li>\n          <li><a href=\"#\">计划</a></li>\n          <li><a href=\"#\">申请</a></li>\n          <li className={props.active === 'login' && 'active'}><a onClick={() => props.onActive('login')}>登录</a></li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div>\n      \n      <div className=\"divider\"></div>\n      <section>\n        -----------banner--------------\n      </section>\n      <div className=\"divider\"></div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4>探索所有的学校，获取所有的资源</h4>\n          <input placeholder=\"学校，城市 或 专业\"></input>\n          <p>添加标签: \n            <div className=\"chip\">公立学校<i className=\"close material-icons\">x</i></div>\n            <div className=\"chip\">私立学校<i className=\"close material-icons\">x</i></div>\n            <div className=\"chip\">排名前100<i className=\"close material-icons\">x</i></div>\n            <div className=\"chip\">不需要GRE<i className=\"close material-icons\">x</i></div>\n          </p>\n          <a className=\"waves-effect waves-light btn\">搜索</a>\n          <span> </span>\n          <a>查看所有</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Axios from \"axios\";\n\nexport const loginApi = (email, password) => \n  Axios.get('/api/login', {auth: {\n      username: email,\n      password: password,\n    }})\n    .then(() =>\n      console.log('login')\n    )\n    .catch(() =>\n      console.log('login failed')\n    )","import React, { useState } from 'react';\nimport { loginApi } from '../../api/loginApi'\n\nfunction Login() {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <div>\n      <h3 className=\"font-weight-bold center-align\" style={{margin: \"4rem 0\"}}>用户登录</h3>\n      <div className=\"row\">\n        <div className=\"col s4 offset-s4\">\n          <div className=\"row\">\n            <div className=\"input-field\" style={{margin: 0}}>\n              <input id=\"email\" type=\"email\" className=\"validate\" onChange={(e) => setEmail(e.target.value)} />\n              <label for=\"email\">邮箱</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field\" style={{margin: 0}}>\n              <input id=\"password\" type=\"password\" className=\"validate\" onChange={(e) => setPassword(e.target.value)} />\n              <label for=\"password\">密码</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col offset-s5\">\n              <button type=\"submit\" className=\"btn waves-effect waves-light\" onClick={() => loginApi(email, password)}>\n                登录\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction Schools() {\n  return (\n    <div>\n      <div className=\"row\" style={{marginTop: '1rem'}}>\n        <div className=\"col s2\">\n          <div className=\"chip\">公立学校</div>\n          <div className=\"chip\">私立学校</div>\n          <div className=\"chip\">排名前100</div>\n          <div className=\"chip\">不需要GRE</div>\n        </div>\n        <div className=\"col s10\">\n          <div className=\"row\">\n            <input className=\"col s10\" placeholder=\"学校，城市 或 专业\"></input>\n            <a className=\"waves-effect waves-light btn\">搜索</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Schools;\n","import React from 'react';\nimport Home from '../feature/home/Home'\nimport Login from '../feature/login/Login'\nimport Schools from '../feature/schools/Schools'\n\nfunction Body(props) {\n  return (\n    <div className=\"container\">\n      {props.active === 'home' && \n        <Home />\n      }\n      {props.active === 'schools' && \n        <Schools />\n      }\n      {props.active === 'login' && \n        <Login />\n      }\n      \n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useState } from 'react';\n\nimport M from 'materialize-css'\nimport 'materialize-css/dist/css/materialize.min.css'\n\nimport Nav from './Nav'\nimport Body from './Body'\n\nfunction App() {\n\n  const [active, setActive] = useState('home')\n\n  return (\n    <div>\n      <Nav active={active} onActive={setActive} />\n      <Body active={active} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}